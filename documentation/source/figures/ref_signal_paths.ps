%!PS-Adobe-3.0 EPSF-3.0
%%Title: figures/ref_signal_paths
%%Creator: XCircuit v3.4 rev10
%%CreationDate: Fri Jul 28 18:52:55 2006
%%Pages: 1
%%BoundingBox: 68 68 628 686
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/gnd {
% trivial
begingate
1 1.00 0 0 0 -32 2 polygon
1 1.00 -32 -32 32 -32 2 polygon
1 1.00 -18 -46 18 -46 2 polygon
1 1.00 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.00 0 0 pinglobal
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/resistor {
begingate
1 1.00 0 64 0 36 2 polygon
1 1.00 0 -64 0 -36 2 polygon
1 1.00 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.00 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.00 -208 -208 infolabel
endgate
} def

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 928 1244 translate

1 1.00 48 512 80 512 80 448 48 448 48 512 5 polygon
1 1.00 80 496 112 528 112 432 80 464 4 polygon
1 1.00 160 144 160 144 2 polygon
(LS) {/Helvetica cf} 2 16 0 1.00 -16 464 label
0 1.00 -144 576 -144 192 -272 192 -272 576 4 polygon
(Power amplifier) {/Helvetica cf} 2 16 90 1.00 -224 544 label
0 1.00 -384 576 -384 192 -576 192 -576 576 4 polygon
(Soundcard output) {/Helvetica cf} 2 16 90 1.00 -544 544 label
1 1.00 64 160 64 448 2 polygon
1.00 0 -208 160 gnd
1.00 0 -480 160 gnd
1 1.00 -480 160 -480 192 2 polygon
1 1.00 -208 160 -208 192 2 polygon
1 1.00 -384 544 -272 544 2 polygon
0 1.00 736 576 736 192 544 192 544 576 4 polygon
(Soundcard input) {/Helvetica cf} 2 16 90 1.00 688 544 label
1.00 0 640 160 gnd
1 1.00 640 192 640 160 2 polygon
(DUT) {/Helvetica cf} 2 16 0 1.00 560 464 label
(REF) {/Helvetica cf} 2 16 0 1.00 560 336 label
1.00 90 -320 560 arrow
1.00 90 -32 560 arrow
(REF) {/Helvetica cf} 2 16 0 1.00 -480 336 label
(DUT) {/Helvetica cf} 2 16 0 1.00 -480 528 label
1 1.00 64 512 64 544 -144 544 3 polygon
1.00 0 64 160 gnd
1.00 90 64 160 jumper
1 1.00 224 480 32 0.00 360.00 xcarc
1 2.00 192 512 192 448 2 polygon
0 1.00 416 544 416 416 288 416 288 544 4 polygon
(amp) {/Helvetica cf} 2 16 180 1.00 384 464 label
(Mic) {/Helvetica cf} 2 16 180 1.00 368 512 label
1 1.00 256 480 288 480 2 polygon
1 1.00 416 480 544 480 2 polygon
1.00 90 480 496 arrow
1.00 90 480 368 arrow
1.00 0 -64 -320 resistor
1 1.00 48 -64 80 -64 80 -128 48 -128 48 -64 5 polygon
1 1.00 80 -80 112 -48 112 -144 80 -112 4 polygon
1 1.00 160 -432 160 -432 2 polygon
1.00 0 -64 -416 gnd
(LS) {/Helvetica cf} 2 16 0 1.00 -16 -112 label
0 1.00 -144 0 -144 -384 -272 -384 -272 0 4 polygon
(Power amplifier) {/Helvetica cf} 2 16 90 1.00 -224 -32 label
0 1.00 -384 0 -384 -384 -576 -384 -576 0 4 polygon
(Soundcard output) {/Helvetica cf} 2 16 90 1.00 -544 -32 label
1 1.00 64 -416 64 -128 2 polygon
1.00 0 -208 -416 gnd
1.00 0 -480 -416 gnd
1 1.00 -480 -416 -480 -384 2 polygon
1 1.00 -208 -416 -208 -384 2 polygon
1 1.00 -384 -32 -272 -32 2 polygon
0 1.00 736 0 736 -384 544 -384 544 0 4 polygon
(Soundcard input) {/Helvetica cf} 2 16 90 1.00 688 -32 label
1.00 0 640 -416 gnd
1 1.00 640 -416 640 -384 2 polygon
(DUT) {/Helvetica cf} 2 16 0 1.00 560 -112 label
(REF) {/Helvetica cf} 2 16 0 1.00 560 -240 label
1.00 90 -320 -16 arrow
1.00 90 -32 -16 arrow
(REF) {/Helvetica cf} 2 16 0 1.00 -480 -240 label
(DUT) {/Helvetica cf} 2 16 0 1.00 -480 -48 label
1 1.00 -384 -224 -272 -224 2 polygon
1 1.00 -64 -416 -64 -384 2 polygon
1 1.00 -144 -224 -64 -224 -64 -256 3 polygon
1 1.00 64 -64 64 -32 -144 -32 3 polygon
1.00 0 64 -416 gnd
1.00 90 64 -224 jumper
1 1.00 48 -224 -64 -224 2 polygon
1 1.00 80 -224 544 -224 2 polygon
1 1.00 224 -96 32 0.00 360.00 xcarc
1 2.00 192 -64 192 -128 2 polygon
0 1.00 416 -32 416 -160 288 -160 288 -32 4 polygon
(amp) {/Helvetica cf} 2 16 180 1.00 384 -112 label
(Mic) {/Helvetica cf} 2 16 180 1.00 368 -64 label
1 1.00 256 -96 288 -96 2 polygon
1 1.00 416 -96 544 -96 2 polygon
1.00 90 480 -80 arrow
1.00 90 480 -208 arrow
1.00 0 -64 -224 dot
1.00 90 -208 160 jumper
1 1.00 -384 352 -336 352 -336 160 -224 160 4 polygon
1 1.00 -192 160 48 160 2 polygon
1 1.00 80 160 352 160 352 352 544 352 4 polygon
1.00 0 -64 -896 resistor
1 1.00 48 -640 80 -640 80 -704 48 -704 48 -640 5 polygon
1 1.00 80 -656 112 -624 112 -720 80 -688 4 polygon
1 1.00 160 -1008 160 -1008 2 polygon
1.00 0 -64 -992 gnd
(LS) {/Helvetica cf} 2 16 0 1.00 -16 -688 label
0 1.00 -144 -576 -144 -960 -272 -960 -272 -576 4 polygon
(Power amplifier) {/Helvetica cf} 2 16 90 1.00 -224 -608 label
0 1.00 -384 -576 -384 -960 -576 -960 -576 -576 4 polygon
(Soundcard output) {/Helvetica cf} 2 16 90 1.00 -544 -608 label
1 1.00 64 -992 64 -704 2 polygon
1.00 0 -208 -992 gnd
1.00 0 -480 -992 gnd
1 1.00 -480 -992 -480 -960 2 polygon
1 1.00 -208 -992 -208 -960 2 polygon
1 1.00 -384 -608 -272 -608 2 polygon
0 1.00 736 -576 736 -960 544 -960 544 -576 4 polygon
(Soundcard input) {/Helvetica cf} 2 16 90 1.00 688 -608 label
1.00 0 640 -992 gnd
1 1.00 640 -992 640 -960 2 polygon
(DUT) {/Helvetica cf} 2 16 0 1.00 560 -688 label
(REF) {/Helvetica cf} 2 16 0 1.00 560 -816 label
1.00 90 -320 -592 arrow
1.00 90 -32 -592 arrow
(REF) {/Helvetica cf} 2 16 0 1.00 -480 -816 label
(DUT) {/Helvetica cf} 2 16 0 1.00 -480 -624 label
1 1.00 -384 -800 -272 -800 2 polygon
1 1.00 -64 -992 -64 -960 2 polygon
1 1.00 -144 -800 -64 -800 -64 -832 3 polygon
1 1.00 64 -640 64 -608 -144 -608 3 polygon
1.00 0 64 -992 gnd
1.00 90 64 -800 jumper
1 1.00 48 -800 -64 -800 2 polygon
1 1.00 416 -800 544 -800 2 polygon
1 1.00 224 -672 32 0.00 360.00 xcarc
1 2.00 192 -640 192 -704 2 polygon
0 1.00 416 -608 416 -864 288 -864 288 -608 4 polygon
(amp) {/Helvetica cf} 2 16 180 1.00 384 -752 label
(Mic) {/Helvetica cf} 2 16 180 1.00 368 -704 label
1 1.00 256 -672 288 -672 2 polygon
1 1.00 416 -672 544 -672 2 polygon
1.00 90 480 -656 arrow
1.00 90 480 -784 arrow
1.00 0 -64 -800 dot
1 1.00 80 -800 288 -800 2 polygon
(R) {/Helvetica cf} 2 16 360 1.00 -32 -336 label
(R) {/Helvetica cf} 2 16 360 1.00 -32 -912 label
(A) {/Helvetica 1.600 cf} {/Helvetica cf} 3 16 0 1.00 -736 400 label
(B) {/Helvetica 1.600 cf} {/Helvetica cf} 3 16 0 1.00 -736 -176 label
(C) {/Helvetica 1.600 cf} {/Helvetica cf} 3 16 0 1.00 -736 -752 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
